name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'LICENSE'
      - 'README.md'
      - 'TODO.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'LICENSE'
      - 'README.md'
      - 'TODO.md'
  workflow_dispatch:

jobs:
  build-push-amd64:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true
        use: true

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Backend (amd64)
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./backend/Dockerfile
        push: true
        platforms: linux/amd64
        tags: tiritibambix/itransfer-backend:amd64

    - name: Build and Push Frontend (amd64)
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./frontend/Dockerfile
        push: true
        platforms: linux/amd64
        tags: tiritibambix/itransfer-frontend:amd64

  build-push-arm64:
    runs-on: ubuntu-latest  # Peut être remplacé par un runner ARM natif

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true
        use: true

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Backend (arm64)
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./backend/Dockerfile
        push: true
        platforms: linux/arm64
        tags: tiritibambix/itransfer-backend:arm64

    - name: Build and Push Frontend (arm64)
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./frontend/Dockerfile
        push: true
        platforms: linux/arm64
        tags: tiritibambix/itransfer-frontend:arm64

  create-manifest:
    needs: [build-push-amd64, build-push-arm64]
    runs-on: ubuntu-latest

    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Create and Push Docker Manifest for Backend
      run: |
        docker manifest create tiritibambix/itransfer-backend:latest \
          --amend tiritibambix/itransfer-backend:amd64 \
          --amend tiritibambix/itransfer-backend:arm64
        docker manifest push tiritibambix/itransfer-backend:latest

    - name: Create and Push Docker Manifest for Frontend
      run: |
        docker manifest create tiritibambix/itransfer-frontend:latest \
          --amend tiritibambix/itransfer-frontend:amd64 \
          --amend tiritibambix/itransfer-frontend:arm64
        docker manifest push tiritibambix/itransfer-frontend:latest
